plugins {
	id 'org.springframework.boot' version '2.5.6'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
        id 'jacoco'
}

group = 'com.service.management'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

ext{
  jacocoVersion='0.7.5.201505241946'
}


repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'mysql:mysql-connector-java'
        implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
        implementation group: 'log4j', name: 'log4j', version: '1.2.16'
        implementation group: 'commons-codec', name: 'commons-codec', version: '1.5'
        implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.2'
        implementation('io.jsonwebtoken:jjwt:0.2')
        implementation group: 'javax.mail', name: 'javax.mail-api', version: '1.6.0'
        testImplementation group: 'junit', name: 'junit', version: '4.12'
        testImplementation group: 'org.powermock', name: 'powermock-module-junit4', version: '1.5.1'

    
}




test {
	useJUnitPlatform()
     finalizedBy jacocoTestReport // report is always generated after tests run
}
jacocoTestReport {
    dependsOn test // tests are required to run before generating the report


  }

jacoco {
    toolVersion = "0.8.7"
    reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}



jacocoTestReport {
    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}

